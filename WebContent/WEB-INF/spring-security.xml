<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.1.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	
	<!-- This is where we configure Spring-Security  -->
	<security:http auto-config="true" use-expressions="true" access-denied-page="/authentication/denied" >

		<security:intercept-url pattern="/user/administrator/**" access="hasRole('ROLE_ADMINISTRATOR')" requires-channel="http"/>
		<security:intercept-url pattern="/user/patient/**" access="hasRole('ROLE_PATIENT')" requires-channel="http"/>
		<security:intercept-url pattern="/user/receptionist/**" access="hasRole('ROLE_RECEPTIONIST')" requires-channel="http"/>
		<security:intercept-url pattern="/user/doctor/**" access="hasRole('ROLE_DOCTOR')" requires-channel="http"/>
		<security:intercept-url pattern="/user/specialist/**" access="hasRole('ROLE_SPECIALIST')" requires-channel="http"/>
		<security:intercept-url pattern="/user/laboratoryTechnician/**" access="hasRole('ROLE_LABORATORYTECHNICIAN')" requires-channel="http"/>
		<security:intercept-url pattern="/user/**" access="hasAnyRole('ROLE_ADMINISTRATOR','ROLE_PATIENT','ROLE_RECEPTIONIST','ROLE_DOCTOR', 'ROLE_SPECIALIST','ROLE_LABORATORYTECHNICIAN')" requires-channel="http"/>
        <security:intercept-url pattern="/**" access="permitAll" requires-channel="http"/>
        
	<security:form-login
				login-page="/authentication/login"
				authentication-failure-url="/authentication/login?error=true"
				default-target-url="/user"/>
			
		<security:logout 
				invalidate-session="true" 
				logout-success-url="/" 
				logout-url="/j_spring_security_logout"/>
	
<!-- 		<security:port-mappings> -->
<!-- 			<security:port-mapping http="8090" https="8443"/> -->
<!-- 			<security:port-mapping http="8080" https="8443"/> -->
<!--     	</security:port-mappings> -->

	</security:http>
	
	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<security:authentication-manager>
	        <security:authentication-provider user-service-ref="customUserDetailsService">
	        		<security:password-encoder ref="passwordEncoder"/>
	        </security:authentication-provider>
	</security:authentication-manager>
	
	<!-- Use a SHA1 encoder since the user's passwords are stored as SHA1 in the database -->
	<bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" id="passwordEncoder">
		<constructor-arg value="256"/>
	</bean>

	<!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
	<bean id="customUserDetailsService" class="com.rekam.medis.authentication.CustomUserDetailsServiceImpl"/>
	
</beans>
